В PHP-examples представлен пример реализованной мной задачи поиска автозапчастей в наличии в магазинах Красноярска.



f_oem.php

В функции getListAjaxPrice класса f_oem после приема введенного OEM-кода выполняется его проверка, затем данные текущего запроса записываются в базу данных.Затем выбираются сайты для парсинга из базы данных, и их обработка ставится в очередь (Jobs). Через 40 секунд перестаем ждать "потоки". Если они выполнились раньше, то прекращаем ждать (когда в записях количество разных фирм сравняется с количеством сайтов). 
После выполнения очереди результаты считываются с базы данных, после чего данные преобразовываются в json.



ParserOEM.php

В функции handle класса ParserOEM выбирается парсер в зависимости от сайта. Полученные данные записываются в базу данных.



SiteBaseOem.php

Класс SiteBaseOem имеет общие для всех парсеров функции логирования ошибок, нахождения адреса, телефона, имени филиала/фирмы, получния данных сайта из базы данных и т.д.



AutotradeSite.php
AutoLeaderSite.php
ForvardAvtoSite.php

3 примера парсеров, написанных под конкретный сайт. Проверяют наличие автозапчасти в магазине и получают данные о товаре. Сайт autoleader1.ru показывает цены только авторизованным пользователям. Поэтому была использована библиотека cURL для авторизации с помощью cookies.



_poisk_form_vue.php

Html-разметка. Ajax для подгрузки результатов поиска. Запись в таблицу (javascript) происходит следующим образом: сначала записываются результаты фирм-партнеров в рандомном порядке. Затем остальные фирмы идут в алфавитном порядке по бренду запчасти. В конце остаются фирмы, в которых не нашлось запчастей. Также реализовано частичное скрытие номеров телефонов и адресов, которые открываются/скрываются по нажатию. На месте адреса изначально показана только название улицы/проспеката и т.д. без номеров домов.
Для мобильной версии реализован свой способ вывода информации.


Работу кода можно посмотреть на главной странице сайта e92.ru